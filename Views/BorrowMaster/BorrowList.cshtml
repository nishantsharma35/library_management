@model IEnumerable<library_management.Models.Borrow>
<link href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" rel="stylesheet">

@{
    Layout = "/Views/Shared/_mainLayout.cshtml";
    ViewData["Title"] = "Borrow List";
}

<div class="card shadow mb-4">
    <div class="card-header py-3 text-center">
        <h2 class="m-0 font-weight-bold text-primary">Borrowers List</h2>
    </div>
    <div class="card-header py-3 d-flex justify-content-between align-items-center">
        <a asp-controller="BorrowMaster" asp-action="UpdateLibraryFine" class="btn btn-warning">Update Fine</a>
    </div>

    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                <thead>
                    <tr>
                        <th>Member Name</th>
                        <th>Book Title</th>
                        <th>Issue Date</th>
                        <th>Due Date</th>
                        <th>Return Date</th>
                        <th>Return Action</th>
                        <th>Fine</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@item.Member.Name</td>
                            <td>@item.Book.Title</td>
                            <td>@item.IssueDate.ToShortDateString()</td>
                            <td>@item.DueDate.ToShortDateString()</td>
                            <td>@(item.IsReturned ? item.ReturnDate?.ToString("dd/MM/yyyy") : "Not Returned")</td>
                            <td>@(item.IsReturned ? "Returned" : "Not Returned")</td>

                            <td>
                                @if (item.Fine != null)
                                {
                                    <span>Total Fine: ₹@item.Fine.FineAmount</span>
                                    <br />
                                    <span>Paid: ₹@item.Fine.PaidAmount</span>
                                    <br />
                                    <span>Remaining: ₹@(item.Fine.FineAmount - item.Fine.PaidAmount)</span>
                                    <br />
                                    <strong>Fine Status: @item.Fine.PaymentStatus</strong>
                                    <br />

                                    @if (item.Fine.PaymentStatus != "Paid" && (item.IsReturned || item.Status == "Returned"))
                                    {
                                        <!-- ✅ Fixed: Changed from id="payfine" to class="payfine-form" to allow multiple forms -->
                                        <form class="payfine-form" method="post">
                                            <input type="hidden" name="fineId" value="@item.Fine.FineId" />
                                            <input type="number" name="payAmount" min="1" max="@(item.Fine.FineAmount - item.Fine.PaidAmount)" required />
                                            <button type="submit" class="btn btn-success">Pay Fine</button>
                                        </form>
                                    }

                                    @if (item.Fine.PaymentStatus == "Paid")
                                    {
                                        <br />
                                        <a href="@Url.Action("ViewFine", "Fine", new { borrowId = item.Fine.BorrowId })" class="btn btn-primary">
                                            View Receipt
                                        </a>
                                    }
                                }
                                else
                                {
                                    <span>No Fine</span>
                                }

                                @if (!item.IsReturned && item.Status != "Returned")
                                {
                                    <button type="button" class="btn btn-primary btnReturnBook" data-borrow-id="@item.BorrowId">Return Book</button>
                                }
                                else
                                {
                                    <span>Book Returned</span>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- ✅ Required Scripts -->
<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="~/bookjs/borrowlist.js"> </script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
<script src="https://cdn.datatables.net/1.10.25/js/jquery.dataTables.min.js"></script>

<script>
    $(document).ready(function () {
        console.log("Initializing DataTable...");
        if ($.fn.DataTable) {
            $('#dataTable').DataTable({
                "paging": true,
                "searching": true,
                "ordering": true,
                "info": true,
                "lengthMenu": [5, 10, 25, 50, 100],
                "responsive": true
            });
            console.log("✅ DataTable Initialized Successfully!");
        } else {
            console.error("❌ DataTable function is not available.");
        }
    });

    // ✅ Event delegation to handle dynamically loaded elements
    $(document).on('submit', '.payfine-form', function (e) {
        e.preventDefault(); // ✅ Prevent default form submission

        var formData = new FormData(this);

        $.ajax({
            url: '/Fine/PayFine',  // ✅ Backend controller route
            type: 'POST',
            data: formData,
            contentType: false,
            processData: false,
            success: function (response) {
                if (response.success) {
                    showToast(response.message, 'success');
                    // ✅ Reset only the submitted form
                    e.target.reset();
                    // ✅ Redirect after 2 seconds
                    setTimeout(function () {
                        window.location.href = '/BorrowMaster/BorrowList';
                    }, 2000);
                } else {
                    showToast(response.message, 'error');
                    if (response.errors) {
                        console.log(response.errors);
                    }
                }
            },
            error: function () {
                showToast('Server error occurred!', 'error');
            }
        });
    });
</script>
