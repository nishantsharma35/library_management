@model List<Borrow>

@{
    Layout = "/Views/Shared/_mainLayout.cshtml";
    ViewData["Title"] = "Pending Borrow Requests";
}

<!-- Page Wrapper -->
<div id="wrapper">
    <!-- Content Wrapper -->
    <div id="content-wrapper" class="d-flex flex-column">
        <!-- Main Content -->
        <div id="content">
            <!-- Begin Page Content -->
            <div class="container-fluid">

                <!-- Page Heading -->
                <h1 class="h3 mb-4 text-gray-800">Pending Borrow Requests</h1>

                @if (Model.Count == 0)
                {
                    <div class="alert alert-info text-center">
                        📌 No Pending Borrow Requests!
                    </div>
                }
                else
                {
                    <div class="card shadow mb-4">
                        <div class="card-header py-3">
                            <h6 class="m-0 font-weight-bold text-primary">Requests List</h6>
                        </div>
                        <div class="card-body">
                            <div class="table-responsive">
                                <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                                    <thead>
                                        <tr>
                                            <th>Member</th>
                                            <th>Book</th>
                                            <th>Issue Date</th>
                                            <th>Action</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var borrow in Model)
                                        {
                                            <tr>
                                                <td>@borrow.Member.Name</td>
                                                <td>@borrow.Book.Title</td>
                                                <td>@borrow.IssueDate.ToShortDateString()</td>
                                                @if (ViewBag.PermissionType != "canView"){
                                                <td>
                                                    <button class="btn btn-success approve-btn" data-id="@borrow.BorrowId">
                                                        <i class="fas fa-check"></i> Approve
                                                    </button>

                                                    <button class="btn btn-danger reject-btn" data-id="@borrow.BorrowId">
                                                        <i class="fas fa-times"></i> Reject
                                                    </button>
                                                </td>
                                                }
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                }
            </div>
            <!-- /.container-fluid -->
        </div>
        <!-- End of Main Content -->
    </div>
    <!-- End of Content Wrapper -->
</div>
<!-- End of Page Wrapper -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

@section Scripts {
    <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
    <script>
        $(document).ready(function () {
            $('#dataTable').DataTable({
                "paging": true,
                "searching": true,
                "ordering": true,
                "info": true,
                 "lengthMenu": [5, 10, 25, 50, 100], // ✅ Entries per page
                    "responsive": true
            });
        });
    </script>
    <script src="~/memberportal/approverejectborrow.js"></script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Approve Button Click Handler
            document.querySelectorAll(".approve-btn").forEach(button => {
                button.addEventListener("click", function () {
                    var borrowId = this.dataset.id;
                    console.log("Clicked Approve ID:", borrowId);  // Debugging ke liye

                    fetch("/BorrowMaster/ApproveBorrow", {
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify({ borrowId: parseInt(borrowId) }) // Ensure number format
                    })
                        .then(response => response.json())
                        .then(data => {
                            showToast(data.message, "success");  // Show success toast
                            location.reload();  // Reload page after approval
                        })
                        .catch(error => {
                            showToast("Error: " + error, "error");  // Show error toast if fetch fails
                            alert("Error: " + error);
                        });
                });
            });

            // Reject Button Click Handler
            document.querySelectorAll(".reject-btn").forEach(button => {
                button.addEventListener("click", function () {
                    var borrowId = this.dataset.id;
                    console.log("Clicked Reject ID:", borrowId);  // Debugging ke liye

                    fetch("/BorrowMaster/RejectBorrow", {
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify({ borrowId: parseInt(borrowId) }) // Ensure number format
                    })
                        .then(response => response.json())
                        .then(data => {
                            showToast(data.message, "error");  // Show error toast for rejection
                            location.reload();  // Reload page after rejection
                        })
                        .catch(error => {
                            showToast("Error: " + error, "error");  // Show error toast if fetch fails
                            alert("Error: " + error);
                        });
                });
            });
        });

        // Toast function to show success or error messages
        function showToast(message, icon = 'success') {
            Swal.fire({
                toast: true,
                position: 'top-end',
                icon: icon,
                title: message,
                showConfirmButton: false,
                timer: 3000,
                timerProgressBar: true,
                customClass: {
                    popup: 'custom-toast-popup',
                    title: 'custom-toast-title'
                },
                iconColor: icon === 'success' ? '#28a745' :
                          icon === 'error'   ? '#dc3545' :
                          icon === 'warning' ? '#ffc107' : '#17a2b8',
                didOpen: (toast) => {
                    toast.addEventListener('mouseenter', Swal.stopTimer);
                    toast.addEventListener('mouseleave', Swal.resumeTimer);
                }
            });
        }
    </script>

}
